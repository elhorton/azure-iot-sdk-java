name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

jobs:
  ### Android, Multi configuration build (12 different test groups to cover) ###
  - job: AndroidBuild
    timeoutInMinutes: 45
    pool:
      name: Hosted VS2017
    displayName: Android Build

    steps:
      - powershell: ./vsts/echo_versions.ps1
        displayName: 'Echo Versions'
        env:
          COMMIT_FROM: $(COMMIT_FROM)
        condition: always()

      - powershell: ./vsts/android_java.cmd
        displayName: 'Android Build'
        env:
          IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)
          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)
          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
          APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)
          DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)
          IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)
          INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
          INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)
          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)
        condition: always()

      - task: CopyFiles@2
        displayName: 'Copy Test Results to Artifact Staging Directory'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'
          Contents: |
            *.*
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        continueOnError: true
        condition: always()

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'androidBuildFiles'
          targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'

  - job: AndroidTest
    timeoutInMinutes: 80
    pool:
      vmImage: 'macOS-latest'
    strategy:
      maxParallel: 17
      matrix:
        TestGroup22:
          ANDROID_TEST_GROUP_ID: TestGroup22

    displayName: Android Test
    dependsOn: AndroidBuild
    steps:
      - task: PowerShell@2
        displayName: 'determine if testing needed'
        condition: always()
        inputs:
          targetType: 'filePath'
          filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1
        env:
          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)
          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)
          TARGET_BRANCH: $(System.PullRequest.TargetBranch)

      - task: DownloadPipelineArtifact@0
        condition: eq(variables['task.android.needToRunTestGroup'], 'yes')
        inputs:
          artifactName: 'androidBuildFiles'
          targetPath: $(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk

#Need some way for this job to startup even before android build, but to wait at this point and download artifacts once they are available. Maybe
# make it all just one job, and start the android emulator startup asynchronous and assumed to be ready once the build completes?
# https://stackoverflow.com/questions/356100/how-to-wait-in-bash-for-several-subprocesses-to-finish-and-return-exit-code-0
# https://www.maketecheasier.com/run-bash-commands-background-linux
# Reruns would have to build again, which is unfortunate, but since the emulator startup time is about the same as the build time anyways, its not a big deal
# Could capture the output for each (right?) and print them sequentially so that it doesn't mix logs from avd and mvn
      - task: Bash@3
        displayName: 'Start Android Emulator'
        inputs:
          targetType: 'filePath'
          filePath: '$(Build.SourcesDirectory)/vsts/StartEmulator.sh'

      - task: Bash@3
        displayName: 'Run tests on emulator'
        inputs:
          targetType: 'filePath'
          filePath: '$(Build.SourcesDirectory)/vsts/RunTestsOnEmulator.sh'
        env:
          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)